name: Test Flix

on:
  workflow_call:
    inputs:
      platform:
        default: "ubuntu-latest"
        required: false
        type: string
      flix:
        description: "Flix version. Options: 'latest', 'release', 'master', 'toml'."
        default: "toml"
        required: false
        type: string
      commit:
        description: "Local repository commit. Options: 'branch', 'release'."
        default: "branch"
        required: false
        type: string

jobs:
  test:
    runs-on: ${{ inputs.platform }}
    steps:
      - name: "Check out local branch"
        with:
          fetch-depth: 0 # set to 0 so we download all the tags
        uses: actions/checkout@V2
      - if: ${{ inputs.commit == "release" }}
        name: "Check out latest release"
        run: |
          tag=$(git describe --tags --abbrev=0)
          git checkout "$tag"

      - name: "Install Java"
        uses: actions/setup-java@v2.5.0
        with:
          java-version: 21
          distribution: zulu

      #
      # Depending on the requested Flix version,
      # we decide what JAR to download to ./flix.jar
      #
      - if: ${{ inputs.flix == "nightly" }}
        name: "Download nightly Flix JAR"
        run: |
          url="https://flix.dev/nightly/flix-latest.jar"
          curl -L -f "$url" > flix.jar

      - if: ${{ inputs.flix == "release" }}
        name: "Download latest released Flix JAR"
        run: |
          gh release download --repo flix/flix --pattern flix.jar
      
      - if: ${{ inputs.flix == "toml" }}
        name: "Read Flix version from flix.toml"
        uses: SebRollen/toml-action@v1.0.2
        id: read_toml
        with:
          file: 'flix.toml'
          field: 'package.flix'
      - if: ${{ inputs.flix == "toml"}}
        name: "Download Flix JAR as specified in flix.toml"
        run: |
          gh release download v${{ steps.read_toml.outputs.value }} --repo flix/flix --pattern flix.jar 
      
      - if: ${{ inputs.flix == "master" }}
        name: "Download Flix source"
        uses: actions/checkout@V2
        with:
          repository: flix/flix
          path: flix-test-build-path
      - if: ${{ inputs.flix == "master" }}
        name: "Build Flix from source"
        run: |
          cd flix-test-build-path
          ./gradlew
          mv build/libs/flix.jar ../flix.jar
      
      - name: "Run tests"
        run: |
          java -jar flix.jar test --github-key ${{ github.token }}
